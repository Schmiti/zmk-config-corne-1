/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        caps_lock_tap_dance: caps_lock_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_LOCK_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&kp CAPSLOCK>;
        };

        e_accents_tap_dance: e_accents_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "E_ACCENTS_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&kp E>, <&e_aigu>, <&e_grave>;

            tapping-term-ms = <300>;
        };

        layer_1_lock_tap_dance: layer_1_lock_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_1_LOCK_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&tog 1>;
        };

        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        enter_combo_right {
            bindings = <&kp ENTER>;
            key-positions = <19 20 21>;
        };

        enter_combo_left {
            bindings = <&kp ENTER>;
            key-positions = <14 15 16>;
        };
    };

    macros {
        e_aigu: e_aigu {
            wait-ms = <0>;
            tap-ms = <0>;
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp E>;
            label = "E_AIGU";
        };

        e_grave: e_grave {
            wait-ms = <0>;
            tap-ms = <0>;
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp E>;
            label = "E_GRAVE";
        };

        e_caret: e_caret {
            wait-ms = <0>;
            tap-ms = <0>;
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp E>;
            label = "E_CARET";
        };

        o_caret: o_caret {
            wait-ms = <0>;
            tap-ms = <0>;
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CARET &kp O>;
            label = "O_CARET";
        };

        a_grave: a_grave {
            wait-ms = <0>;
            tap-ms = <0>;
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp A>;
            label = "A_GRAVE";
        };

        u_grave: u_grave {
            wait-ms = <0>;
            tap-ms = <0>;
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp U>;
            label = "U_GRAVE";
        };

        apostroph: apostroph {
            wait-ms = <0>;
            tap-ms = <0>;
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp SPACE>;
            label = "APOSTROPH";
        };

        c_cedilla: c_cedilla {
            wait-ms = <0>;
            tap-ms = <0>;
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings 
              = <&macro_press &kp RIGHT_ALT>
              , <&macro_tap &kp COMMA>
              , <&macro_release &kp RIGHT_ALT>
            ;
            label = "C_CEDILLA";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE            &kp Q                &kp C            &lt 3 O            &kp P            &kp W    &kp J                    &kp M         &lt 3 D       &kp EXCLAMATION  &kp Y                &kp BSPC
&kp TAB               &hml LEFT_COMMAND A  &hml LEFT_ALT S  &hml LSHFT E       &hml LCTRL N     &kp F    &kp L                    &hmr LCTRL R  &hmr LSHFT T  &hmr LEFT_ALT I  &hmr LEFT_COMMAND U  &kp RET
&caps_lock_tap_dance  &kp Z                &kp X            &kp QUESTION       &kp V            &kp B    &kp COLON                &kp H         &kp G         &kp DOT          &kp K                &kp RSHIFT
                                                            &kp LEFT_COMMAND   &kp LCTRL        &mo 2    &layer_1_lock_tap_dance  &kp SPACE     &sl 3
            >;
        };

        nav_num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &none   &kp N7        &kp N8        &kp N9        &none     &kp HOME   &kp PAGE_DOWN      &kp PAGE_UP      &kp END     &none             &trans
&trans  &kp N0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &none     &kp LEFT   &kp DOWN           &kp UP_ARROW     &kp RIGHT   &none             &trans
&trans  &none   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none     &kp COMMA  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE  &kp C_PLAY_PAUSE  &trans
                              &trans        &trans        &trans    &trans     &trans             &trans
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp CARET       &kp LESS_THAN         &kp GREATER_THAN       &kp DLLR         &kp PRCNT    &kp AT_SIGN    &kp AMPERSAND    &kp ASTRK      &kp SINGLE_QUOTE  &kp GRAVE          &trans
&trans  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp EQUAL    &kp BACKSLASH  &kp KP_PLUS      &kp KP_MINUS   &kp SLASH         &kp DOUBLE_QUOTES  &trans
&trans  &kp TILDE       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDERSCORE   &kp HASH     &kp PIPE       &kp EXCLAMATION  &kp SEMICOLON  &kp COLON         &kp QUESTION       &trans
                                              &bt BT_NXT             &trans           &trans       &trans         &trans           &trans
            >;
        };

        accents {

            bindings = <
&trans  &trans    &c_cedilla  &o_caret  &trans    &trans  &trans  &trans      &trans  &trans  &trans    &trans  
&trans  &a_grave  &e_aigu     &e_grave  &e_caret  &trans  &trans  &trans      &trans  &trans  &u_grave  &trans  
&trans  &trans    &trans      &trans    &trans    &trans  &trans  &trans      &trans  &trans  &trans    &trans  
                              &trans    &trans    &trans  &trans  &apostroph  &trans
            >;
        };
    };
};
